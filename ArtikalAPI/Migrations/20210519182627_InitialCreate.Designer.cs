// <auto-generated />
using ArtikalAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArtikalAPI.Migrations
{
    [DbContext(typeof(ArtikalContext))]
    [Migration("20210519182627_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("ArtikalAPI.Models.Artikal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("JedinicaMjere")
                        .HasColumnType("text");

                    b.Property<string>("Naziv")
                        .HasColumnType("text");

                    b.Property<string>("Sifra")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Artikli");
                });

            modelBuilder.Entity("ArtikalAPI.Models.Atribut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArtikalId")
                        .HasColumnType("int");

                    b.Property<string>("Vrijednost")
                        .HasColumnType("text");

                    b.Property<int>("VrstaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtikalId");

                    b.HasIndex("VrstaId");

                    b.ToTable("Atributi");
                });

            modelBuilder.Entity("ArtikalAPI.Models.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Hash")
                        .HasColumnType("text");

                    b.Property<string>("Ime")
                        .HasColumnType("text");

                    b.Property<string>("Prezime")
                        .HasColumnType("text");

                    b.Property<string>("Salt")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("ArtikalAPI.Models.Vrsta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vrste");
                });

            modelBuilder.Entity("ArtikalAPI.Models.Atribut", b =>
                {
                    b.HasOne("ArtikalAPI.Models.Artikal", "Artikal")
                        .WithMany("Atributi")
                        .HasForeignKey("ArtikalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtikalAPI.Models.Vrsta", "Vrsta")
                        .WithMany()
                        .HasForeignKey("VrstaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artikal");

                    b.Navigation("Vrsta");
                });

            modelBuilder.Entity("ArtikalAPI.Models.Artikal", b =>
                {
                    b.Navigation("Atributi");
                });
#pragma warning restore 612, 618
        }
    }
}
